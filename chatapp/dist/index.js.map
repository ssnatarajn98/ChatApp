{"version":3,"sources":["../src/index.js"],"names":["PORT","app","server","createServer","use","exposedHeaders","json","limit","req","res","version","wss","on","connection","console","log","message","send","listen","process","env","address","port"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,OAAO,IAAb;AACA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAGAA,IAAIG,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAGAH,IAAIG,GAAJ,CAAQ,oBAAK;AACTC,iBAAgB;AADP,CAAL,CAAR;;AAIAJ,IAAIG,GAAJ,CAAQ,qBAAWE,IAAX,CAAgB;AACpBC,QAAO;AADa,CAAhB,CAAR;AAGAN,IAAIG,GAAJ,CAAQ,UAACI,GAAD,EAAKC,GAAL,EAAY;AAClBA,KAAIH,IAAJ,CAAS;AACRI;AADQ,EAAT;AAGD,CAJD;AAKAT,IAAIU,GAAJ,GAAW,gBAAW;AACrBT,SAAQD,IAAIC;AADS,CAAX,CAAX;;AAIAD,IAAIU,GAAJ,CAAQC,EAAR,CAAW,YAAX,EAAwB,UAACC,UAAD,EAAc;AACrCC,SAAQC,GAAR,CAAY,sBAAZ;AACA;AACAF,YAAWD,EAAX,CAAc,SAAd,EAAyB,UAACI,OAAD,EAAW;AACnCF,UAAQC,GAAR,CAAY,+CAAZ,EAA6DC,OAA7D;AACD;AACAH,aAAWI,IAAX,CAAgB,8BAAhB;AACC,EAJD;AAMA,CATD;;AAWAhB,IAAIC,MAAJ,CAAWgB,MAAX,CAAkBC,QAAQC,GAAR,CAAYpB,IAAZ,IAAoBA,IAAtC,EAA4C,YAAM;AAC1Cc,SAAQC,GAAR,6BAAsCd,IAAIC,MAAJ,CAAWmB,OAAX,GAAqBC,IAA3D;AACP,CAFD;;kBAIerB,G","file":"index.js","sourcesContent":["import http from 'http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport {version} from '../package.json'\r\nimport WebSocketServer, {Server} from 'uws';\r\n\r\nconst PORT = 3000;\r\nconst app = express();\r\napp.server = http.createServer(app);\r\n\r\n\r\napp.use(morgan('dev'));\r\n\r\n\r\napp.use(cors({\r\n    exposedHeaders: \"*\"\r\n}));\r\n\r\napp.use(bodyParser.json({\r\n    limit: '50mb'  \r\n}));\r\napp.use((req,res)=> {\r\n\t\tres.json({\r\n\t\t\tversion: version\r\n\t\t});\r\n});\r\napp.wss =  new Server({\r\n\tserver: app.server \r\n});\r\n\r\napp.wss.on('connection',(connection)=>{\r\n\tconsole.log(\"New Client connected\");\r\n\t// listening even new message from client.\r\n\tconnection.on('message', (message)=>{\r\n\t\tconsole.log(\" Got new message from client, the message is:\", message);\r\n\t//after getting new message from client, we send back to the client with new message\r\n\tconnection.send('Hi Cleint, nice to meet you.');\r\n\t});\r\n\t\t\r\n});\r\n\r\napp.server.listen(process.env.PORT || PORT, () => {\r\n        console.log(`App is running on port ${app.server.address().port}`);\r\n});\r\n\r\nexport default app;"]}